name: Merge PR when Issue is Ready for Production

on:
  push:
  # issues:
  #   types:
  #     - labeled

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  merge-associated-pr:
    # if: github.event.label.name == 'in progress'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: octokit/graphql-action@v2.x
        with:
          query: |
            query {
              repository(owner: "AdrienEtienne", name: "nx-next-vercel") {
                projectsV2(first: 10) {
                  nodes {
                    id
                    title
                  }
                }
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Move issue in project
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            mutation($projectId: ID!, $issueId: ID!, $fieldId: ID!) {
              updateProjectV2ItemFieldValue(
                input: {
                  projectId: $projectId,
                  itemId: $issueId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: "REPLACE_WITH_OPTION_ID" }
                }
              ) {
                projectV2Item {
                  id
                }
              }
            }
          variables: |
            {
              "projectId": "8",
              "issueId": "9",
              "fieldId": "REPLACE_WITH_STATUS_FIELD_ID"
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Find PR that references the issue
      #   id: find_pr
      #   run: |
      #     ISSUE_NUMBER=${{ github.event.issue.number }}
      #     echo "Searching PRs referencing issue #$ISSUE_NUMBER..."
      #     # Find PRs that mention the issue
      #     PRS=$(gh pr list --state open --search "Closes #$ISSUE_NUMBER in:body" --json number,headRefName,mergeable --jq '.[] | select(.mergeable == "MERGEABLE") | .number')
      #     if [ -z "$PRS" ]; then
      #       echo "❌ No open, mergeable PR found referencing issue #$ISSUE_NUMBER"
      #       exit 1
      #     fi
      #     echo "Found PR #: $PRS"
      #     echo "pr_number=$PRS" >> $GITHUB_OUTPUT
      # - name: Merge the associated PR
      #   run: |
      #     gh issue edit ${{ github.event.issue.number }} --remove-label "qa"
      #     gh issue comment ${{ github.event.issue.number }} --body "This issue is ready for production. Non-regression tests running..."
      #     gh issue comment ${{ github.event.issue.number }} --body "Non-regression tests passed. Merging PR #${{ steps.find_pr.outputs.pr_number }}."
      #     gh pr merge ${{ steps.find_pr.outputs.pr_number }} \
      #       --repo ${{ github.repository }} \
      #       --squash \
      #       --delete-branch
